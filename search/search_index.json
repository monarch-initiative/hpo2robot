{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"hpo2robot","text":"<p>A JavaFX GUI application to streamline the creation of ROBOT files for the generation of new HPO terms.</p>"},{"location":"robot/","title":"ROBOT","text":"<p>ROBOT (a recursive acronym for \u201cROBOT is an OBO Tool\u201d) is an open source library and command-line tool for automating ontology development tasks. Here, we use ROBOT to create HPO terms from a template that is created with the help of this GUI.</p>"},{"location":"robot/#setting-up-robot","title":"Setting up ROBOT","text":"<p>Follow these instructions.</p>"},{"location":"robot/#setting-up-docker","title":"Setting up Docker","text":"<p>Follow these instructions. Start Docker before using ROBOT.</p>"},{"location":"robot/#new-term-creation-identifiers","title":"New term creation identifiers","text":"<ul> <li>For the biospecimen phenotype branch [&gt; 0020000 , &lt;= 0025000]</li> <li>For manual term entry [&gt; 0030001 , &lt;= 0040000]</li> <li>For ROBOT new terms using this app [&gt; 5000000 , &lt;= 5199999]</li> </ul>"},{"location":"setup/","title":"setup","text":"<p>We will generate a standalone executable with GraalVM once the app is mature. For now, checkout the project and enter the following to run it</p> <pre><code>mvn clean package\nmvn javafx:run\n</code></pre> <p>To run the app from IntelliJ, add the following to the VM options (Edit Configurations of run button) <pre><code>--add-exports=javafx.base/com.sun.javafx.event=org.controlsfx.controls\n--add-modules\njavafx.base,javafx.graphics\n--add-reads\njavafx.base=ALL-UNNAMED\n</code></pre></p>"}]}